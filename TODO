libmoosecat 
-----------

- Implement mc_data_open()/mc_data_close() // DONE
- Make outputs.c use a HashMap for gods sake.. // DONE
- Think about locking Songs 

    - Introduce mc_store_data_open() and mc_store_data_close()
    - Make user lock when needed. Only sane way without loosing performance.

- Look a lot at the section marked with TODO
- mc_proto_ -> mc_ ?
- revert introduction of currentsong.c/status.c/statistics.c
- Make libmoosecat fully threadsafe -- DONE. Well, almost.
  - status timer stuff / connect()?
 
- Make client/store failsafe in case of connection loss
  - Chances are getting better, 
    but lots of testing needed with store

- Clean up API, make some sphinx documentation
- Split Queue in seperate table. Fixes problem with duplicate songs in Queue...
  (Same algorithm with stored playlist, just more lightweight)
- Update cython wrapper (Oof)
- Write finally some tests for the Store? Still not 100% sure it will work
  with all configurations. Especially when output buffer is too large.
- Make MPD Devs include a ``plchangesposidfile`` command. ``plchanges`` 
  kills the startup time more than I'd accept (especially since that's a very
  easy patch...).
